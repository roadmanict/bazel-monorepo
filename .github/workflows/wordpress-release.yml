on:
  push:
    branches:
      - master
    paths:
      - 'wordpress/**'

jobs:
  wordpress-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache PHP dependencies
        uses: actions/cache@v1
        with:
          path: wordpress/vendor
          key: ${{ runner.OS }}-wordpress-build-${{ hashFiles('wordpress/**/composer.lock') }}

      - name: Install Wordpress dependencies
        uses: ./.github/actions/composer

      - name: zip projectproject # This would actually build your project, using zip for an example artifact
        run: |
          zip -r wordpress-release wordpress/vendor wordpress/web wordpress/config wordpress/.htaccess

      - name: Create Release
        id: create_wordpress_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: Wordpress Release ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-wordpress-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_wordpress_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./wordpress-release.zip
          asset_name: wordpress-release.zip
          asset_content_type: application/zip